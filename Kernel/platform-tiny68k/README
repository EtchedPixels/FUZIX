Initial testing build for Tiny68K

You need a disk image with the boot loader on LBA 1 and the kernel on LBA 2+
Block 0 should hold a partition table.

Remember: the disk is byte swapped including on the emulator so you will
want to use conv=notrunc,swab

Unsupported right now:
- RTC
- Detect if monitor is loaded high and if so avoid it
- Trapping back into monitor if high
- Reboot

Known problems
--------------

Core dumps are unfinished (need to include trap frame info and a lot
more)

Select doesn't work (need new hash algorithm for bigger setups)

Scheduler
	- linked list of runnables for big boxes

(CURSES lib) invaders always reports that the terminal is too small
(stty reports rows cols correctly)

Is the header and binary start mismatch right (seems to be 0x48 v 0x44)

cpuinfo does not support 68K. Get subtype from sysinfo.cpu[0]

We don't yet have a vfork or posix spawn. That causes a lot of extra copying
of memory.

To Do
-----



68K has space to add ptrace?

Better binary format.

LWIP ?

Look into posix spawn functions or vfork and if /bin/sh can use them

Longer term split into multiple segments (code R/O uncopied, data/stack etc
copied)

Sort out building the zork engines and l9x etc for 68K

DONE Add a 'user touches kernel' catcher on the debug/sim
DONE ps user/kernel include mismatch error
DONE (libc bug) calendar does not put a : before 'cannot open file'
DONE fsh editing does not seem to work (build bug ?)
DONE (longjmp bug) sh exit command touches blows up
DONE levee just exits (bug in execve) now correctly says too big
DONE startrek pauses before hit any key to accept message
DONE (sh longjmp bug) init forgets to run the bootwait stuff
DONE (sh longjmp bug) shutdown doesn't
DONE chmem does not support 68K (and fixed size too)
DONE Traps need to report their actual trap number and the correct type and
     frame (optionally for userspace)
DONE Trap need to report extra frame info (eg address of bus error)
DONE We ssig on a trap, but for a synchronous trap we need immediate delivery
     and ssig does not ensure that. What else is needed ? - chksigs and trap
     exit path with signal ?
	- Directly check masking on our trap
	- If blocked RTE back
	- If uncaught act immediately (ignore or kill)
	- If vectored push pending signal back, push frame and RTE
	  through that frame direct to a signal handler.
DONE (preempt bug I think) Sometimes get a trap then it repeats
    (various panics - trap then nready panic, switch fail etc)
DONE Trap/signal recovery is broken somewhere. Easy way to see is when we get
     a hail of errors from fforth. We eventually blow up with signal in kernel mode
DONE Something null pointers at boot time (sh)
	- sh null pointers on ">/var/run/utmp". Historic bug in xec().
DONE Should sh report (core dumped)?
DONE fweep needs to build differently for 68K (and build v1-v8)
DONE (longjmp bug) fforth doesn't work (panic data stack underflow and traps out)
DONE Signals need to include trap frame on stack and unwind it or siginfo ptr
or somesuch ?
DONE Pick a final trap number that is clear of any interesting emulations
DONE Switch from one process in memory model to flat model with parent first
     and child custom stack build
DONE All I/O going via buffers
DONE Dynamic udata allocation
DONE Do we need the extra irqstack any more ?
DONE Move lots of p68000.S code into lowlevel-68000.S
DONE Need some kind of CPU specific C file (or a general one with ifdefs ?) and
     then move lots of platform/main.c into it.
DONE Clean up switchout/switchin/dofork/forkreturn. We only ever return from a
     fork() as the parent so the d0.w push/pop can go everywhere
DONE pagesize is not meaningful
DONE 68010 support. 68EC020 and 68020 also work although we don't know
	how to decode the frames nicely in the crash handler
DONE Byteswap mode for ucp ?
DONE T68KRC (2MB version wth possible other serial etc on RC2014)
DONE linked list of alarm/timer uses for scaling
DONE propogate synchronous trap changes to Z80+MMU and Z180 illegal and maybe
generically jp 0 and 0 corruptor ?
DONE Test Baud rate setting
