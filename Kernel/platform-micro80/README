Prototype Fuzix port for the Micro80 platform under design

This is based around a single chip Z84C15 which has an integrated CTC, SIO and
PIO as well as a pair of chip selects that allow limited banked use of the
memory. The low 4K is fixed to the upper 64K bank of the two, the rest can be
switched either way on 4K boundaries.

Memory map

Kernel
0000-0FFF	Common and serial buffers
1000-EFFF	Kernel

User
0000-0FFF	Common and serial buffers
1000-FFFF	User space


Stuff To Do

o	Use PIO properly (and in emulator)
	(joysticks and SD card etc)
o	Soft ints ?
o	Would kernel from 0x1000-EFFF only with a common at F000 and
	0000-0FFF whilst common kept user only make more sense. We get
	the same sized user space but gain the ability to run CP/M emulation.

Emulation

Write the bootloader once to block 0x00 with partitions 
Write kernel images to block 0x01-0x7F
Make it into a disk image

Real Hardware

Partition the CF card with a standard partitioning tool so it has the normal
sector 2048 start for the file systems.
Add the bootloader to block 0 of a CF card
Set up a partition (type 7E) for Fuzix and put a Fuzix root file system on it
using dd or similar raw tools
Set up a second partition (type 7F) as swap.

You can partition the rest of the card however you want.

Boot the machine with the card present and the ROM will see a bootable CF
card and boot from it.

