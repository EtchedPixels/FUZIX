A FUZIX target for the Amstrad PCW series computers

This is an initial port for the Amstrad PCW series machines. It has the
following major limitations that are still being worked on

- The floppy driver eats disks on write
- The floppy driver only supports 720K DS/DD disk
- The floppy driver crashes the machine on disk errors

Memory is currently arranged with a fixed common at 0xC000-0xFFFF and user
processes get allocated 1-3 16K banks below that as needed. On a 256K machine
chmem is very useful.

The kernel itself lives in the low banks 0-3. Bank 3 is mapped as the common
and also contains the system stacks. The top of it is also magically filled
with the keyboard data by the system.

Banks 4 and 5 hold the video and roller RAM. (720x256 pixels + 512 byte
roller RAM). On boot the font is copied into the video bank for ease of use
and to free space in the kernel mappings. This still leaves about 5K in
the video space that we could use for other things (candidates being either
the tty buffers and/or the disk buffers).

(Note that this puts the kernel not user space in the contended RAM)

Banks 6 and up are allocated to user processes.


TODO
- Move disk buffers into own bank and use external disk buffers to keep under
  the 48K line or maybe just bank kernel (makes more sense ?). See what
  we do about NET first
- Rework loader so that we can load a banked image
DONE - Alternative might be to go with 48K process size maximum and new a bank
16/fixed common mode. Might be good for RC2014 and some others too ?
IP - fdc765 driver wants replacing with generic one
DONE - fdc - rework and debug drive type detect
DONE - fdc - double/single side and 40/80 handling
- fdc - step rates according to type
- fdc - sort out device id properly
- fdc - double stepping
DONE - discard handling
- dynamic buffers (or do we place them in the rest of the screen bank ?)
- UDG, FONT, graphics support/debug
- input device debug
DONE - probe actual memory size
DONE - reboot
IP - support Joyce mode (EDFE A=0, if returns A=255 joyce)
	- Reboot/Off
	- Joyce RTC
- Real RTC addins
- speed up keyproc (asm ?)
DONE - keyboard repeat
DONE - debug swap
- Keyboard mappings for delete etc need work
- Shrink common size back down a bit
- FDC probe to discard


Supported Hardware (all only in early test)
-------------------------------------------

	Amstrad PCW 8256
	Amstrad PCW 8512
	Joyce emulation of the above

	Planned:
	Amstrad PCW 9256/9256+/9512/9512+/PCW10 (need a subtly different boot
		disk)

	Options:
		CF2 floppy
		CF2DD floppy
		3.5" floppy	(need to sort seek rates better)
		UIDE
		Joyce virtual hard disk
		CPS8256 and clones (parallel port not yet done)
		AMX mouse
		Kempston Mouse
		Kempston Joystick

	Planned:
		Keyboard mouse/joystick hacks
		Centronics on CPS8256
		Standalone centronics
		DKTronics sound

	Not Supported:
		Other printers
		SCA Mark2 RTC
		Locolink
		Other hard disk controllers
		(Cirtech GEM is PC/XT type at 0xA8-AB so shouldn't be hard)
		(Cirtech GEM ATA is ATA at A8-AF)
		(ASD PCWHD10/20 similar but A0-A7 : clashes with AMX mouse
			unless AMX moved to 0x80, and Electric Studio pen)
		NTSC



Building A Boot Image
---------------------

edit Makefile and set it to z80, platform pcw8256
make clean; make
cd platform-pcw8256/BOOTBLOCK
zmac 765.s


# Make a blank disc
dd if=/dev/zero of=bootdisk.raw bs=512 count=360
# Add the boot block in sector 0
dd if=platform-pcw8256/BOOBLOCK/765.cim of=bootdisk.raw conv=notrunc
# Add the kernel
dd if=fuzix.bin of=bootdisk.raw bs=512 seek=1 conv=notrunc

# Start the emulator
xjoyce

Hit F3 (Boot from alternative disc)
Boot From
	=>Other
Enter filename for disc image
	Disc file...
		select bootdisk.raw
	Advanced
		Raw disc image file
	OK
	OK

Should boot and detect the drives then prompt bootdev:

At that point the keyboard should work.

The floppy driver is incomplete but given a rootfs image on /dev/fd1 you
should be able to at least get it to mount

device 256 = fd0 257 = fd1

(0-255 are the UIDE hard disks, or FID hard disks on Joyce)

To build a UIDE disk boot and then exit. The created c.dsk in Joyce/Disks is 
a MYZ80 image (256 E5 followed by 8MB raw disk image).

Mixed boot/root images are not currently supported (this just needs a modified
boot block that starts at a different offset)


Memory
------

Then PCW8256 memory is split into multiple banks not all of which can be used
for any purpose

The display takes 23040 bytes of video line memory. Each line must be within
the low 128K and is indexed by the roller RAM

The roller RAM must also be within the low 128K and is 512 bytes.

The keyboard magically replaces the top 16 bytes of bank 3.

Our loader puts the screen into bank 4 and bank 5 (part of), then loads the
OS into bank 0/1/2/3.

Other work needed here is to put the buffer cache at the end followed by the
font data if we do it this way, then discard. At that point we can move the
font into video mappings.

Right now bank 0-3 are fully used if we do the buffer reclaim (which gets us
a nice 12 or so extra buffers), bank 4 is all video and bank 5 would have
5K left after the fonts.  An obvious use for that would be to go to 256
byte tty queues and add ptys - (costing us about 3K)

Other candidates would be the low level graphics rendering routines as we'll
want those for a graphics mode (or we need to support an mmap like mode for
direct mapping a 16K graphics window over the app memory)


