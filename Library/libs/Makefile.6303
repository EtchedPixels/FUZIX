CC = cc68 -X
ASM = as68
AR = ar
LINKER = ld68
CC_OPT = -D__STDC__ -c -I../include/ -I../include/6303/
CC_NOOPT = -D__STDC__ -c -I../include/ -I../include/6303/
ASM_OPT =
LINKER_OPT =
SRC_CRT0 = crt0_6303.s crt0nostdio_6303.s
OBJ_CRT0 = $(SRC_CRT0:.s=.o)
SRC_ASM = longjmp_6303.s setjmp_6303.s
OBJ_ASM = $(SRC_ASM:.s=.o)
#
#	Library routines.
#
SRC_C =  __argv.c abort.c aes256.c asctime.c assert.c atexit.c
SRC_C += bcmp.c bcopy.c bsearch.c calloc.c cfree.c clock.c closedir.c
SRC_C += closedir_r.c clock_gettime.c clock_getres.c clock_settime.c
SRC_C += creat.c crypt.c ctermid.c ctime.c cuserid.c
SRC_C += err.c errno.c error.c
SRC_C += execl.c execv.c execvp.c exit.c
SRC_C += fclose.c fflush.c fgetc.c fgetgrent.c fgetpwent.c
SRC_C += fgetpos.c fgets.c fopen.c fork.c fprintf.c fputc.c fputs.c fread.c
SRC_C += free.c fsetpos.c ftell.c fwrite.c getcwd.c
SRC_C += getenv.c __getgrent.c getgrgid.c getgrnam.c getloadavg.c getopt.c
SRC_C += getpw.c __getpwent.c getpwnam.c getpwuid.c gets.c gettimeofday.c
SRC_C += getw.c gmtime.c gmtime_r.c grent.c htons.c htonl.c index.c initgroups.c
SRC_C += isatty.c killpg.c libintl.c
SRC_C += localtim.c localtim_r.c lseek.c lsearch.c lstat.c ltoa.c ltostr.c
SRC_C += malloc.c memmove.c mkfifo.c mkstemps.c mntent.o nanosleep.c
SRC_C += opendir.c opendir_r.c pause.c perror.c
SRC_C += popen.c printf.c putenv.c putgetch.c putpwent.c putw.c pwent.c qsort.c
SRC_C += raise.c rand.c readdir.c readlink.c realloc.c regerror.c
SRC_C += regsub.c remove.c remount.c rewind.c rindex.c rootmntent.c
SRC_C += setbuffer.c setenv.c
SRC_C += setlocale.c setvbuf.c settimeofday.c sgetl.c sleep.c sprintf.c
SRC_C += sputl.c stat.c statvfs.c stdio0.c stime.c
SRC_C += strcasecmp.c strcasestr.c strdup.c stricmp.c strlcpy.c strncasecmp.c
SRC_C += strnicmp.c strnlen.c strsep.c strsignal.c swab.c swapon.c
SRC_C += system.c time.c tmpfile.c tmpnam.c ttyname.c
SRC_C += tzset.c umount.c ungetc.c usleep.c utent.c utimes.c utsname.c
SRC_C += vfprintf.c vprintf.c wait.c xitoa.c pathconf.c
SRC_C += gethostname.c sysconf.c confstr.c memccpy.c getpass.c
SRC_C += strtok_r.c strtol.c
# ctype
SRC_C += isalnum.c isalpha.c isascii.c isblank.c iscntrl.c isdigit.c
SRC_C += isgraph.c islower.c isprint.c ispunct.c isspace.c isupper.c
SRC_C += isxdigit.c toupper.c tolower.c
# tty layer
SRC_C += tcgetattr.c tcsetattr.c tcdrain.c tcflow.c tcflush.c
SRC_C += cfmakeraw.c cfspeed.c revoke.c
# scanf
SRC_C += fscanf.c scanf.c sscanf.c vfscanf.c vscanf.c vsscanf.c
# regexp is a good compiler test!
SRC_C += regexp.c
SRC_C += strcpy.c strlen.c abs.c atoi.c atol.c labs.c
SRC_C += strcat.c strchr.c strcmp.c strcspn.c strncat.c strncmp.c
SRC_C += strncpy.c strpbrk.c strrchr.c strspn.c strstr.c strtok.c
SRC_C += memchr.c memcmp.c memcpy.c memset.c

SRC_TC += termcap.c tgetent.c
SRC_CURS = $(shell find curses -name '*.c')
SRC_RL = readline.c readline_fn.c


OBJ_CURS = $(SRC_CURS:.c=.o)
OBJ_TC = $(SRC_TC:.c=.o)
OBJ_RL = $(SRC_RL:.c=.o)

OBJ_C = $(SRC_C:.c=.o)
OBJ_HARD = $(SRC_HARD:.c=.o)
OBJ_ALL = $(OBJ_ASM) $(OBJ_C) $(OBJ_HARD) $(OBJ_TC) $(OBJ_RL) $(OBJ_CURS)

all: syslib.lib termcap.lib curses.lib readline.lib liberror.txt \
     crt0_6303.o crt0nostdio_6303.o

fuzix6303/Makefile: ../tools/syscall_6303.c ../../Kernel/include/syscall_name.h
	(cd ..; make tools/syscall_6303)
	../tools/syscall_6303

syslib.lib: fuzix6303/Makefile $(OBJ_ALL)
	(cd fuzix6303; make)
	$(AR) cr syslib.lib $(OBJ_ALL)
	ln -sf syslib.lib c6303.a

termcap.lib: fuzix6303/Makefile $(OBJ_TC)
	$(AR) cr termcap.lib $(OBJ_TC)
	ln -sf termcap.lib termcap6303.a

readline.lib: fuzix6303/Makefile $(OBJ_RL)
	$(AR) cr readline.lib $(OBJ_RL)
	ln -sf readline.lib readline6303.a

curses.lib: fuzix6303/Makefile $(OBJ_CURS)
	$(AR) cr curses.lib $(OBJ_CURS)
	ln -sf curses.lib curses6303.a

liberror.txt:
	../tools/liberror > liberror.txt

$(OBJ_ASM):%.o: %.s
	$(ASM) $(ASM_OPT) $(@:.o=.s)

$(OBJ_CRT0):%.o: %.s
	$(ASM) $(ASM_OPT) $(@:.o=.s)

$(OBJ_C):%.o: %.c
	$(CC) $(CC_OPT) $(@:.o=.c)

$(OBJ_TC):%.o: %.c
	$(CC) $(CC_OPT) $(@:.o=.c)

$(OBJ_RL):%.o: %.c
	$(CC) $(CC_OPT) $(@:.o=.c)

$(OBJ_CURS):%.o: %.c
	$(CC) $(CC_OPT) $(@:.o=.c)

$(OBJ_HARD):%.o: %.c
	$(CC) $(CC_NOOPT) $(@:.o=.c)

clean:
	rm -rf *.o *.lib *~ syscall.l  libc.l syslib.l liberror.txt
	(cd curses; rm -rf *.rel *.asm *.sym *.lst *~ *.o)
	(cd fuzix6303; make clean)

# Blank for now until we sort stuff out properly for 6303
install:
