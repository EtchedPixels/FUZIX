PLATFORM = pdp11
CC = pdp11-aout-gcc
ASM = pdp11-aout-as
AR = pdp11-aout-ar
LINKER = pdp11-aout-ld
CFLAGS = -fno-strict-aliasing -fomit-frame-pointer -fno-builtin -msoft-float -Wall -Os -I../../Library/include -I../../Library/include/pdp11
LINKER_OPT = -L../../Library/libs -ltermcappdp11 -lcpdp11 -T../../Library/pdp11.ld
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += -L$(LIBGCCDIR) -lgcc 
#-T ../../Library/elf2flt.ld
CRT0 = ../../Library/libs/crt0_pdp11.o
CRT0NS = ../../Library/libs/crt0nostdio_pdp11.o
AOUT2FUZIX = cp  #for now

.SUFFIXES: .c .o

SRCS = io_base.c keyboard_base.c plato.c protocol.c screen_base.c terminal.c \
       touch_base.c tgi_ascii.c

FSRCS = fuzix/font.c fuzix/io.c fuzix/keyboard.c fuzix/scale.c fuzix/screen.c \
	fuzix/splash.c fuzix/terminal_char_load.c fuzix/touch.c

INC = io.h keyboard.h plato_key.h protocol.h screen.h terminal.h touch.h

all:    plato

OBJS = $(SRCS:.c=.o)
FOBJS = $(patsubst fuzix/%.c,%.o, $(FSRCS))

plato: $(OBJS) $(FOBJS)
	$(LINKER) -o plato.bin $(OBJS) $(FOBJS) $(LINKER_OPT)
	$(AOUT2FUZIX) plato.bin plato

$(OBJS): %.o: %.c
	$(CC) $(COPT) $(CFLAGS) -c $< -o $@

$(FOBJS): %.o: fuzix/%.c
	$(CC) $(COPT) $(CFLAGS) -c $< -o $@

$(OBJS) : $(INC)

$(FOBJS) : $(INC)

clean:
	rm -f *.o *.rel *.lst *.sym *.asm *.map *.noi *.lk *.bin *~ plato
	(cd fuzix; rm -f *.o *.rel *.lst *.sym *.asm *.map *.noi *.lk *.bin *~ )
