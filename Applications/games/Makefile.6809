PLATFORM = 6809
CC = m6809-unknown-gcc
ASM = m6809-unknown-as
AR = m6809-unknown-ar
LINKER = m6809-unknown-ld
CFLAGS = -I../../Library/include -I../../Library/include/6809
LINKER_OPT = --oformat=raw -L../../Library/libs -lc6809
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += -L$(LIBGCCDIR) -lgcc
LINKER_OPT += --script=../util/$(TARGET).link
ASM_OPT = -o
CRT0 = ../../Library/libs/crt0_6809.o
CRT0NS = ../../Library/libs/crt0nostdio_6809.o

.SUFFIXES: .c .o

SRCSNS = qrun.c fortune.c

SRCS  = adv01.c adv02.c adv03.c adv04.c adv05.c adv06.c adv07.c \
        adv08.c adv09.c adv10.c adv11.c adv12.c adv13.c adv14a.c adv14b.c \
        myst01.c myst02.c myst03.c myst04.c myst05.c myst06.c myst07.c \
        myst08.c myst09.c myst10.c myst11.c fortune-gen.c

OBJS = $(SRCS:.c=.o)
OBJSNS = $(SRCSNS:.c=.o)

APPS = $(OBJS:.o=)
APPSNS = $(OBJSNS:.o=)

all: $(APPS) $(APPSNS) size.report

$(APPS): $(CRT0)
$(APPSNS): $(CRT0NS)

$(APPS) $(APPSNS): %: %.o
	$(LINKER) -o $@ $(LINKER_OPT) $^

size.report: $(APPS)
	ls -l $^ > $@

clean:
	rm -f $(OBJS) $(OBJSNS) $(APPS) $(APPSNS) *.lst *.map size.report

