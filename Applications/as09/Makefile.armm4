ROOT = ../..
include $(ROOT)/Applications/rules.armm4

OBJS		=as.o assemble.o errors.o express.o \
		 genbin.o genlist.o genobj.o gensym.o \
		 keywords.o macro.o mops.o pops.o readsrc.o \
		 scan.o table.o typeconv.o alloc.o

all: as09

as09: $(CRT0) $(OBJS)
	$(LINKER) $^ -o $@.debug $(LINKER_OPT)
ifdef ELF2FUZIX
	$(STRIP) -o $@.bin $(STRIP_OPT) $@.debug
	$(ELF2FUZIX) -o $@ $@.bin
else
	$(STRIP) -o $@ $(STRIP_OPT) $@.debug
endif

clean:
	rm -f *.o as09 *~ *.bin *.data *.text *.debug

.c.o:
	$(CC) $(CFLAGS) $(COPT) -c $<

$(OBJS): const.h errors.h

as.o: const.h type.h byteord.h macro.h file.h flag.h globvar.h
assemble.o: const.h type.h address.h globvar.h opcode.h scan.h
error.o: const.h type.h
express.o: const.h type.h address.h globvar.h scan.h source.h
genbin.o: const.h type.h address.h file.h globvar.h
genlist.o: const.h type.h address.h flag.h file.h globvar.h macro.h scan.h \
	   source.h
genobj.o: const.h type.h address.h file.h globvar.h
gensym.o: const.h type.h flag.h file.h globvar.h
keywords.o: const.h type.h globvar.h opcode.h
macro.o: const.h type.h globvar.h scan.h macro.h
mops.o: const.h type.h globvar.h opcode.h scan.h address.h
pops.o: const.h type.h address.h flag.h globvar.h opcode.h scan.h
readsrc.o: const.h type.h flag.h file.h globvar.h macro.h scan.h source.h
scan.o: const.h type.h globvar.h scan.h
table.o: const.h type.h globvar.h opcode.h scan.h
