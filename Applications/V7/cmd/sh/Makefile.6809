PLATFORM = 6809
CC = m6809-unknown-gcc
ASM = m6809-unknown-as
AR = m6809-unknown-ar
LINKER = m6809-unknown-ld
CFLAGS =  -I../../../../Library/include -I../../../../Library/include/6809 -Wall -pedantic -fno-strict-aliasing
# Workaround for gcc6809 bug - register copy propagation issue
CFLAGS += -fno-cprop-registers
COPT = -Os
LINKER_OPT = --oformat=raw -L../../../../Library/libs -lc6809
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += -L$(LIBGCCDIR) -lgcc -Map=sh.map
LINKER_OPT += --script=../../../util/$(TARGET).link
ASM_OPT = -o
CRT0 = ../../../../Library/libs/crt0_6809.o

.SUFFIXES: .c .o


SRCS  = args.c blok.c builtin.c cmd.c ctype.c error.c expand.c fault.c io.c \
        macro.c main.c msg.c name.c print.c service.c setbrk.c stak.c \
        string.c word.c xec.c glob.c

INCS  = brkincr.h ctype.h defs.h mac.h mode.h name.h stak.h sym.h timeout.h

OBJS = $(SRCS:.c=.o)
FOBJS = $(patsubst %.c,fshbuild/%.o, $(SRCS))

all: fsh sh

$(OBJS): $(INCS)

$(OBJS): %.o : %.c
	$(CC) -c $(CFLAGS) $(COPT) $<

$(FOBJS): fshbuild/%.o: %.c
	$(CC) -c $(CFLAGS) $(COPT) -DBUILD_FSH $< -o $@

sh: $(OBJS) $(CRT0)
	$(LINKER) -o  $@ $(LINKER_OPT) $^

fsh: $(FOBJS) $(CRT0)
	$(LINKER) -o $@ $(LINKER_OPT)  $^ -lreadline6809

clean:
	rm -f $(OBJS) $(FOBJS) fsh sh $(SRCS:.c=) core *~

rmbak:
	rm -f *~ core
